//
   基础架构 by 张云山 on 2017/4/17.
include vars
block vars
mixin init_html(init_data)
    -
        //功能：初始化页面结构
        init_data = init_data || {};
        init_data.title = init_data.title || appTitle;//文档标题，默认Framework7 iOS
        init_data.appType = init_data.appType || appType_ios;//应用风格，默认ios风格
        init_data.bodyClassName = init_data.bodyClassName || "";//body的className，默认为空
        init_data.themeColor = init_data.themeColor || (init_data.appType == appType_material)? "#2196f3" : "transparent";//浏览器主题颜色，默认transparent
        init_data.icon = init_data.icon || "img/icon.png";//icon图标
        init_data.links = init_data.links || [/*栗子：{name:"linkName",href:"linkUrl"}*/];//公共css
        init_data.BottonLinks = init_data.BottonLinks || [/*栗子：{name:"linkName",href:"linkUrl"}*/];//底部公共css
        init_data.scripts = init_data.scripts || [/*栗子：{name:"scriptName",src:"scriptUrl"}*/];//公共js
        init_data.BottonScripts = init_data.BottonScripts || [/*栗子：{name:"scriptName",src:"scriptUrl"}*/];//底部公共js
    doctype
    html
        head
            meta(charset="utf-8")
            meta(name="viewport", content="width=device-width, initial-scale=1, maximum-scale=1, minimum-scale=1, user-scalable=no, minimal-ui")
            meta(name='mobile-web-app-capable', content='yes')
            meta(name='apple-mobile-web-app-capable', content='yes')
            meta(name="apple-mobile-web-app-status-bar-style", content="black")
            meta(name="theme-color", content="#{init_data.themeColor}")
            title #{init_data.title}
            link(rel="stylesheet", href="#{public_css}#{init_data.appType}/framework7.#{init_data.appType}.css")
            link(rel="stylesheet", href="#{public_css}#{init_data.appType}/framework7.#{init_data.appType}.colors.css")
            case init_data.appType
                when appType_ios
                    link(rel="stylesheet", href="css/framework7-icons.css")
                when appType_material
                    link(href='http://fonts.googleapis.com/css?family=Roboto:400,300,500,700', rel='stylesheet', type='text/css')
                    link(rel="stylesheet", href="css/material-icons.css")
            link(rel="stylesheet", href="css/kitchen-sink.css")
            link(rel="icon", href="#{init_data.icon}")
            link(rel="apple-touch-icon", href="#{init_data.icon}")
            each  link in (function() {for (var i = 0 ; i < init_data.links.length ; i++){public_links.push(init_data.links[i]);}; return public_links;})()
                link(name="#{link.name}",rel="stylesheet", href="#{link.href}")
            each  script in (function() {for (var i = 0 ; i < init_data.scripts.length ; i++){public_scripts.push(init_data.scripts[i]);}; return public_scripts;})()
                script(name="#{script.name}",type="text/javascript", src="#{script.src}")
        body(class="#{init_data.bodyClassName}")
            block body
            script(type="text/javascript", src="#{public_js}/framework7.js")
            script(type="text/javascript", src="js/index.js")
            each  link in init_data.BottonLinks
                link(name="#{link.name}",rel="stylesheet", href="#{link.href}")
            each  script in init_data.BottonScripts
                script(name="#{script.name}",type="text/javascript", src="#{script.src}")
            block bottom
mixin list-blockFun(listData)
    -
        //功能：list-block模块
        listData = listData || {};
        listData.data = listData.data || [];//列表数据
        listData.bool = listData.bool || false;//是否关闭侧面板
        listData.className = listData.className || "";//classNamme
        if(listData.bool){listData.className += " close-panel ";};
    .list-block
        ul
            for i in listData.data
                li
                    a(href="#{i.url}",class="#{listData.className} #{(i.className)? i.className : ''}").item-link
                        .item-content
                            .item-media
                                i.icon.icon-f7
                            .item-inner
                                .item-title #{i.name}
                                if i.new
                                    span.badge.bg-green #{i.new}
mixin panelFun(data)
    -
        //功能：侧面板
        data = data || {}
        data.type = data.type || "left";//默认为left面板
        data.name = data.name || "left";//面板名称默认为left
    .panel-overlay
    case data.type
        when "right"
            -data.name = "right";
            .panel.panel-right.panel-reveal.layout-dark
                block panelFun
        default
            .panel.panel-left.panel-cover.layout-dark
                block panelFun
mixin viewFun(data)
    -
        //功能：内容区域
        data = data || {};
        data.type = data.type || "main";//容器类型
    .views
        .view(class="view-#{data.type}")
            block viewFun
mixin navs(data)
    -
        //功能：顶部导航
        data = data || {};
        data.title = data.title || appTitle
        data.left = data.left || {
            url:"index.html",
            txt:"返回",
            bool:true
        }
        data.right = data.right || {
            url:"#",
            bool:true
        }
    .navbar
        .navbar-inner
            .left.sliding
                if data.left.bool
                    a(href="#{data.left.url}").back.link
                        i.icon.icon-back
                        span #{data.left.txt}
            .center.sliding #{data.title}
            .right
                if data.right.bool
                    a(href="#{data.right.url}").open-panel.link.icon-only
                        i.icon.icon-bars
block init_html
